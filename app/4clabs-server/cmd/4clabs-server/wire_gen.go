// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"4clabs-server/app/4clabs-server/internal/adapter/driven/server"
	"4clabs-server/app/4clabs-server/internal/adapter/driven/service"
	"4clabs-server/app/4clabs-server/internal/adapter/driving/nftgo"
	"4clabs-server/app/4clabs-server/internal/conf"
	"4clabs-server/app/4clabs-server/internal/usecase"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	nftgoService := nftgo.NewService(bootstrap)
	address := usecase.NewAddress(nftgoService)
	nft := usecase.NewNft(nftgoService)
	serviceService := service.NewService(address, nft)
	httpServer := server.NewHTTPServer(bootstrap, serviceService, logger)
	grpcServer := server.NewGRPCServer(bootstrap, logger)
	app := newApp(logger, httpServer, grpcServer)
	return app, func() {
	}, nil
}
