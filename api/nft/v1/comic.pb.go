// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: api/nft/v1/comic.proto

package v1

import (
	v1 "4clabs-server/api/base/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComicCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginNftContractAddress string `protobuf:"bytes,1,opt,name=origin_nft_contract_address,json=originNftContractAddress,proto3" json:"origin_nft_contract_address,omitempty"`
	OriginNftTokenId         string `protobuf:"bytes,6,opt,name=origin_nft_token_id,json=originNftTokenId,proto3" json:"origin_nft_token_id,omitempty"`
	// mint config
	MintLimit     uint32   `protobuf:"varint,2,opt,name=mint_limit,json=mintLimit,proto3" json:"mint_limit,omitempty"`
	MintPrice     float32  `protobuf:"fixed32,3,opt,name=mint_price,json=mintPrice,proto3" json:"mint_price,omitempty"`
	Name          string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl      []string `protobuf:"bytes,5,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	MinterAddress string   `protobuf:"bytes,7,opt,name=minter_address,json=minterAddress,proto3" json:"minter_address,omitempty"`
}

func (x *ComicCreateRequest) Reset() {
	*x = ComicCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nft_v1_comic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComicCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComicCreateRequest) ProtoMessage() {}

func (x *ComicCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nft_v1_comic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComicCreateRequest.ProtoReflect.Descriptor instead.
func (*ComicCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_nft_v1_comic_proto_rawDescGZIP(), []int{0}
}

func (x *ComicCreateRequest) GetOriginNftContractAddress() string {
	if x != nil {
		return x.OriginNftContractAddress
	}
	return ""
}

func (x *ComicCreateRequest) GetOriginNftTokenId() string {
	if x != nil {
		return x.OriginNftTokenId
	}
	return ""
}

func (x *ComicCreateRequest) GetMintLimit() uint32 {
	if x != nil {
		return x.MintLimit
	}
	return 0
}

func (x *ComicCreateRequest) GetMintPrice() float32 {
	if x != nil {
		return x.MintPrice
	}
	return 0
}

func (x *ComicCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComicCreateRequest) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *ComicCreateRequest) GetMinterAddress() string {
	if x != nil {
		return x.MinterAddress
	}
	return ""
}

type ComicCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ComicCreateResponse) Reset() {
	*x = ComicCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nft_v1_comic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComicCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComicCreateResponse) ProtoMessage() {}

func (x *ComicCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nft_v1_comic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComicCreateResponse.ProtoReflect.Descriptor instead.
func (*ComicCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_nft_v1_comic_proto_rawDescGZIP(), []int{1}
}

type ListComicWorkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListRequest *v1.BaseListRequest `protobuf:"bytes,1,opt,name=base_list_request,json=baseListRequest,proto3" json:"base_list_request,omitempty"`
	Address         string              `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ListComicWorkRequest) Reset() {
	*x = ListComicWorkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nft_v1_comic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComicWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComicWorkRequest) ProtoMessage() {}

func (x *ListComicWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nft_v1_comic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComicWorkRequest.ProtoReflect.Descriptor instead.
func (*ListComicWorkRequest) Descriptor() ([]byte, []int) {
	return file_api_nft_v1_comic_proto_rawDescGZIP(), []int{2}
}

func (x *ListComicWorkRequest) GetBaseListRequest() *v1.BaseListRequest {
	if x != nil {
		return x.BaseListRequest
	}
	return nil
}

func (x *ListComicWorkRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListComicWorkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListResponse *v1.BaseListResponse `protobuf:"bytes,1,opt,name=base_list_response,json=baseListResponse,proto3" json:"base_list_response,omitempty"`
	ComicWorks       []*ComicWork         `protobuf:"bytes,2,rep,name=comic_works,json=comicWorks,proto3" json:"comic_works,omitempty"`
}

func (x *ListComicWorkResponse) Reset() {
	*x = ListComicWorkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nft_v1_comic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComicWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComicWorkResponse) ProtoMessage() {}

func (x *ListComicWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nft_v1_comic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComicWorkResponse.ProtoReflect.Descriptor instead.
func (*ListComicWorkResponse) Descriptor() ([]byte, []int) {
	return file_api_nft_v1_comic_proto_rawDescGZIP(), []int{3}
}

func (x *ListComicWorkResponse) GetBaseListResponse() *v1.BaseListResponse {
	if x != nil {
		return x.BaseListResponse
	}
	return nil
}

func (x *ListComicWorkResponse) GetComicWorks() []*ComicWork {
	if x != nil {
		return x.ComicWorks
	}
	return nil
}

var File_api_nft_v1_comic_proto protoreflect.FileDescriptor

var file_api_nft_v1_comic_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x66, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x66,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x66, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x02, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x1b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x66,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98,
	0x01, 0x2a, 0x52, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x66, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x13,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x66, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28,
	0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x29, 0x0a, 0x0a,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x0a, 0x05, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x0e, 0x6d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x2a, 0x52, 0x0d, 0x6d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x15, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x63,
	0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x42, 0x2b,
	0x0a, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1b,
	0x34, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x66, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_nft_v1_comic_proto_rawDescOnce sync.Once
	file_api_nft_v1_comic_proto_rawDescData = file_api_nft_v1_comic_proto_rawDesc
)

func file_api_nft_v1_comic_proto_rawDescGZIP() []byte {
	file_api_nft_v1_comic_proto_rawDescOnce.Do(func() {
		file_api_nft_v1_comic_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nft_v1_comic_proto_rawDescData)
	})
	return file_api_nft_v1_comic_proto_rawDescData
}

var file_api_nft_v1_comic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_nft_v1_comic_proto_goTypes = []interface{}{
	(*ComicCreateRequest)(nil),    // 0: api.nft.v1.ComicCreateRequest
	(*ComicCreateResponse)(nil),   // 1: api.nft.v1.ComicCreateResponse
	(*ListComicWorkRequest)(nil),  // 2: api.nft.v1.ListComicWorkRequest
	(*ListComicWorkResponse)(nil), // 3: api.nft.v1.ListComicWorkResponse
	(*v1.BaseListRequest)(nil),    // 4: api.base.v1.BaseListRequest
	(*v1.BaseListResponse)(nil),   // 5: api.base.v1.BaseListResponse
	(*ComicWork)(nil),             // 6: api.nft.v1.ComicWork
}
var file_api_nft_v1_comic_proto_depIdxs = []int32{
	4, // 0: api.nft.v1.ListComicWorkRequest.base_list_request:type_name -> api.base.v1.BaseListRequest
	5, // 1: api.nft.v1.ListComicWorkResponse.base_list_response:type_name -> api.base.v1.BaseListResponse
	6, // 2: api.nft.v1.ListComicWorkResponse.comic_works:type_name -> api.nft.v1.ComicWork
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_nft_v1_comic_proto_init() }
func file_api_nft_v1_comic_proto_init() {
	if File_api_nft_v1_comic_proto != nil {
		return
	}
	file_api_nft_v1_typs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_nft_v1_comic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComicCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nft_v1_comic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComicCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nft_v1_comic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComicWorkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nft_v1_comic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComicWorkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nft_v1_comic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_nft_v1_comic_proto_goTypes,
		DependencyIndexes: file_api_nft_v1_comic_proto_depIdxs,
		MessageInfos:      file_api_nft_v1_comic_proto_msgTypes,
	}.Build()
	File_api_nft_v1_comic_proto = out.File
	file_api_nft_v1_comic_proto_rawDesc = nil
	file_api_nft_v1_comic_proto_goTypes = nil
	file_api_nft_v1_comic_proto_depIdxs = nil
}
